<?xml version="1.0" encoding="UTF-8"?>
<project name="kitchensynclib" default="build" basedir=".">
	<!-- The Title and version of the Application -->
	<property name="app.title"  value="KitchenSyncLib"/>
	<property name="app.version" value="3.0" /> <!-- Change this to match the current version of KitchenSyncLib -->
	<echo>${app.title} ${app.version}</echo>
	
	<property name="execExt" value="" description="Used to add .exe to windows projects." />
	
	<!-- Check for the build.properties file and force the user to create one before compiling. -->
	<available file="build.properties" filePath="." property="build.propsExist" />
	<fail unless="build.propsExist" message="You must create a file called 'build.properties' with your local settings in order to use ant with this project. You can use the build.properties.template file as a starting point." />
	<property file="build.properties" />
	<echo message="Successfully loaded properties." />
	<echo message="Using Flex SDK v${flex.sdkVersion}" />
	
	<!-- The Location of FlexSDK on your Computer. Required by Flex ant tasks -->
	<property name="FLEX_HOME" location="${flex.sdkPath}" description="Required by flex ant tasks" />
	
	<!--
	The Location of your Application Classes on your Computer
	NOTE: This Path should be reletive to the build.xml file.
	NOTE: ${basedir} is an ant property that represents the directory holding the build.xml file
	-->
	<property name="project.sourcePath" location="${basedir}/src"/>
	<property name="project.libraryPath" location="${basedir}/libs"/>

	<!-- path to the flex task libraries. -->
	<path id="flex.tasksClasspath">
		<fileset dir="${flex.antLibsPath}">
			<include name="*.jar"/>
		</fileset>
	</path> 
	<typedef resource="flexTasks.tasks" classpathref="flex.tasksClasspath" />
		
	<!--
	The Location you wish to output to on your Computer
	NOTE: I have encountered issues with this folder containing Spaces
	-->
	<property name="output.docsPath" location="${basedir}/docs/asdoc"/>
	<property name="output.binaryPath" location="${basedir}/bin"/>
	<property name="output.name" value="${app.title}-${app.version}" />
	<property name="output.swc" value="${output.binaryPath}/${output.name}.swc" />

<!-- Macros -->

<macrodef name="build-exec">
	<attribute name="incremental" default="false" />
	<sequential>
		<echo>Compiling library. Incremental build = @{incremental}</echo>
		<compc o="${output.swc}" incremental="@{incremental}">
			<load-config filename="${flex.configPath}" />
			<sp path-element="${project.sourcePath}" />
			<library-path dir="${project.libraryPath}" includes="*" />
			<is dir="${project.sourcePath}" includes="*" />
		</compc>
		<echo>Success! Created ${output.name}.swc</echo>
	</sequential>
</macrodef>

<macrodef name="docs-exec">
	<sequential>
		<echo>Exporting ASDoc documentation</echo>
		<exec executable="${flex.binaryPath}/asdoc${execExt}" failonerror="true" description="Compiles the asdocs">
			<arg line="-load-config ${flex.configPath}" />
			<arg line="-source-path ${project.sourcePath}"/>
			<arg line="-library-path ${project.libraryPath}"/>
			<arg line="-doc-sources ${project.sourcePath}"/>
			<arg line="-window-title &quot;${app.title} v${app.version}&quot;"/>
			<arg line="-output ${output.docsPath}"/>
		</exec>
	</sequential>
</macrodef>
	
<!-- Targets -->
	
<!--
	<target name="buildAll" description="Runs all compile targets">
		<antcall target="releaseBuild" />
		<antcall target="docs" />
	</target>
-->
	
	<target name="build" description="Compiles the kitchensynclib into a SWC library file.">
		<build-exec incremental="false" />
	</target>
	
	<target name="buildincremental" description="Compiles the kitchensynclib into a SWC library file using incremental compilation.">
		<build-exec incremental="true" />
	</target>
	
	<target name="cleanbuild" description="Cleans and Compiles the kitchensynclib into a SWC library file.">
		<delete file="${output.swc}" />
		<build-exec incremental="false" />
	</target>
	
	<target name="docs" description="Compiles the asdocs in the source code into HTML.">
		<docs-exec />
	</target>
	<target name="cleandocs" description="Cleans and Compiles the asdocs in the source code into HTML.">
		<delete dir="${output.docsPath}" />
		<docs-exec />
	</target>
	
	<target name="releaseBuild" description="Compiles the kitchensynclib into a SWC library file and creates a zip of the source.">
		<echo>Exporting release build</echo>
		
		<delete file="${output.swc}" />
		
		<antcall target="cleanbuild" />
		<antcall target="cleandocs" />
		
		<echo>Creating temp files.</echo>
		<property name="tempPath" location="${output.binaryPath}/compileTemp" />		
		<delete dir="${tempPath}" description="delete any old temp files." />
		<mkdir dir="${tempPath}" />
			<mkdir dir="${tempPath}/source" />
				<mkdir dir="${tempPath}/source/src" />
				<mkdir dir="${tempPath}/source/libs" />
			<mkdir dir="${tempPath}/docs" />
			<mkdir dir="${tempPath}/bin" />
		
		<echo>Exporting source code to temp path</echo>
		<copy todir="${tempPath}/source/src"><fileset dir="${project.sourcePath}" /></copy>
		<copy todir="${tempPath}/source/libs"><fileset dir="${project.libraryPath}" /></copy>
		<copy todir="${tempPath}/docs"><fileset dir="${output.docsPath}" /></copy>
		<copy todir="${tempPath}/bin" file="${output.binaryPath}/${output.name}.swc" description="make a copy of the swc in the temp path."  />
		
		<echo>Zipping files</echo>
		<zip destfile="${output.binaryPath}/${output.name}.zip" update="true" whenempty="fail" description="Zipping all files in temp path.">
			<zipfileset dir="${tempPath}" />
		</zip>
		<delete dir="${tempPath}" description="delete the temp files." />
		<echo>Created zip file bin/${output.name}.zip</echo>
	</target>
</project>